(function() {
    var type_impls = Object.fromEntries([["cs431_homework",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Infallible\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#940\">Source</a></span><a href=\"#impl-Clone-for-Infallible\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cs431_homework/test/loom/clone/trait.Clone.html\" title=\"trait cs431_homework::test::loom::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#941\">Source</a><a href=\"#method.clone\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"cs431_homework/test/loom/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"cs431_homework/test/loom/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cs431_homework::test::loom::string::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Infallible\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#947\">Source</a></span><a href=\"#impl-Debug-for-Infallible\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cs431_homework/test/loom/fmt/trait.Debug.html\" title=\"trait cs431_homework::test::loom::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#948\">Source</a><a href=\"#method.fmt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, _: &amp;mut <a class=\"struct\" href=\"cs431_homework/test/loom/fmt/struct.Formatter.html\" title=\"struct cs431_homework::test::loom::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"cs431_homework/test/loom/result/enum.Result.html\" title=\"enum cs431_homework::test::loom::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"cs431_homework/test/loom/fmt/struct.Error.html\" title=\"struct cs431_homework::test::loom::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"cs431_homework/test/loom/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cs431_homework::test::loom::string::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Infallible\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#954\">Source</a></span><a href=\"#impl-Display-for-Infallible\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cs431_homework/test/loom/fmt/trait.Display.html\" title=\"trait cs431_homework::test::loom::fmt::Display\">Display</a> for <a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#955\">Source</a><a href=\"#method.fmt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, _: &amp;mut <a class=\"struct\" href=\"cs431_homework/test/loom/fmt/struct.Formatter.html\" title=\"struct cs431_homework::test::loom::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"cs431_homework/test/loom/result/enum.Result.html\" title=\"enum cs431_homework::test::loom::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"cs431_homework/test/loom/fmt/struct.Error.html\" title=\"struct cs431_homework::test::loom::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"cs431_homework/test/loom/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","cs431_homework::test::loom::string::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Error-for-Infallible\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#961\">Source</a></span><a href=\"#impl-Error-for-Infallible\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cs431_homework/test/loom/error/trait.Error.html\" title=\"trait cs431_homework::test::loom::error::Error\">Error</a> for <a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.description\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#962\">Source</a><a href=\"#method.description\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/error/trait.Error.html#method.description\" class=\"fn\">description</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 1.42.0: use the Display impl or to_string()</span></div></span><div class='docblock'> <a href=\"cs431_homework/test/loom/error/trait.Error.html#method.description\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.source\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.30.0\">1.30.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/error.rs.html#105\">Source</a></span><a href=\"#method.source\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/error/trait.Error.html#method.source\" class=\"fn\">source</a>(&amp;self) -&gt; <a class=\"enum\" href=\"cs431_homework/test/loom/option/enum.Option.html\" title=\"enum cs431_homework::test::loom::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"cs431_homework/test/loom/error/trait.Error.html\" title=\"trait cs431_homework::test::loom::error::Error\">Error</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns the lower-level source of this error, if any. <a href=\"cs431_homework/test/loom/error/trait.Error.html#method.source\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cause\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/error.rs.html#141\">Source</a></span><a href=\"#method.cause\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/error/trait.Error.html#method.cause\" class=\"fn\">cause</a>(&amp;self) -&gt; <a class=\"enum\" href=\"cs431_homework/test/loom/option/enum.Option.html\" title=\"enum cs431_homework::test::loom::option::Option\">Option</a>&lt;&amp;dyn <a class=\"trait\" href=\"cs431_homework/test/loom/error/trait.Error.html\" title=\"trait cs431_homework::test::loom::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</span></div></span></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.provide\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/error.rs.html#204\">Source</a><a href=\"#method.provide\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/error/trait.Error.html#method.provide\" class=\"fn\">provide</a>&lt;'a&gt;(&amp;'a self, request: &amp;mut <a class=\"struct\" href=\"cs431_homework/test/loom/error/struct.Request.html\" title=\"struct cs431_homework::test::loom::error::Request\">Request</a>&lt;'a&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>error_generic_member_access</code>)</span></div></span><div class='docblock'>Provides type-based access to context intended for error reports. <a href=\"cs431_homework/test/loom/error/trait.Error.html#method.provide\">Read more</a></div></details></div></details>","Error","cs431_homework::test::loom::string::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C!%3E-for-Infallible\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#994\">Source</a></span><a href=\"#impl-From%3C!%3E-for-Infallible\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cs431_homework/test/loom/convert/trait.From.html\" title=\"trait cs431_homework::test::loom::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.never.html\">!</a>&gt; for <a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#996\">Source</a><a href=\"#method.from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.never.html\">!</a>) -&gt; <a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<!>","cs431_homework::test::loom::string::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlignmentError%3CSrc,+Dst%3E%3E-for-Infallible\" class=\"impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#340\">Source</a><a href=\"#impl-From%3CAlignmentError%3CSrc,+Dst%3E%3E-for-Infallible\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;Src, Dst&gt; <a class=\"trait\" href=\"cs431_homework/test/loom/convert/trait.From.html\" title=\"trait cs431_homework::test::loom::convert::From\">From</a>&lt;<a class=\"struct\" href=\"zerocopy/error/struct.AlignmentError.html\" title=\"struct zerocopy::error::AlignmentError\">AlignmentError</a>&lt;Src, Dst&gt;&gt; for <a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a><div class=\"where\">where\n    Dst: <a class=\"trait\" href=\"zerocopy/trait.Unaligned.html\" title=\"trait zerocopy::Unaligned\">Unaligned</a> + ?<a class=\"trait\" href=\"cs431_homework/test/loom/marker/trait.Sized.html\" title=\"trait cs431_homework::test::loom::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zerocopy/error.rs.html#342\">Source</a><a href=\"#method.from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: <a class=\"struct\" href=\"zerocopy/error/struct.AlignmentError.html\" title=\"struct zerocopy::error::AlignmentError\">AlignmentError</a>&lt;Src, Dst&gt;) -&gt; <a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AlignmentError<Src, Dst>>","cs431_homework::test::loom::string::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Infallible\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.44.0\">1.44.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#1002\">Source</a></span><a href=\"#impl-Hash-for-Infallible\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cs431_homework/test/loom/hash/trait.Hash.html\" title=\"trait cs431_homework::test::loom::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#1003\">Source</a><a href=\"#method.hash\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"cs431_homework/test/loom/hash/trait.Hasher.html\" title=\"trait cs431_homework::test::loom::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"cs431_homework/test/loom/hash/trait.Hasher.html\" title=\"trait cs431_homework::test::loom::hash::Hasher\"><code>Hasher</code></a>. <a href=\"cs431_homework/test/loom/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"cs431_homework/test/loom/hash/trait.Hasher.html\" title=\"trait cs431_homework::test::loom::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"cs431_homework/test/loom/marker/trait.Sized.html\" title=\"trait cs431_homework::test::loom::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"cs431_homework/test/loom/hash/trait.Hasher.html\" title=\"trait cs431_homework::test::loom::hash::Hasher\"><code>Hasher</code></a>. <a href=\"cs431_homework/test/loom/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","cs431_homework::test::loom::string::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Infallible\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#986\">Source</a></span><a href=\"#impl-Ord-for-Infallible\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cs431_homework/test/loom/cmp/trait.Ord.html\" title=\"trait cs431_homework::test::loom::cmp::Ord\">Ord</a> for <a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#987\">Source</a><a href=\"#method.cmp\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, _other: &amp;<a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a>) -&gt; <a class=\"enum\" href=\"cs431_homework/test/loom/cmp/enum.Ordering.html\" title=\"enum cs431_homework::test::loom::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"cs431_homework/test/loom/cmp/enum.Ordering.html\" title=\"enum cs431_homework::test::loom::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"cs431_homework/test/loom/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1013-1015\">Source</a></span><a href=\"#method.max\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"cs431_homework/test/loom/marker/trait.Sized.html\" title=\"trait cs431_homework::test::loom::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"cs431_homework/test/loom/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1052-1054\">Source</a></span><a href=\"#method.min\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"cs431_homework/test/loom/marker/trait.Sized.html\" title=\"trait cs431_homework::test::loom::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"cs431_homework/test/loom/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1078-1080\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"cs431_homework/test/loom/marker/trait.Sized.html\" title=\"trait cs431_homework::test::loom::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"cs431_homework/test/loom/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","cs431_homework::test::loom::string::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Infallible\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0, const unstable\">1.34.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143800\" title=\"Tracking issue for const_cmp\">unstable</a>)</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#969\">Source</a></span><a href=\"#impl-PartialEq-for-Infallible\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cs431_homework/test/loom/cmp/trait.PartialEq.html\" title=\"trait cs431_homework::test::loom::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#970\">Source</a><a href=\"#method.eq\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, _: &amp;<a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","cs431_homework::test::loom::string::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Infallible\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#979\">Source</a></span><a href=\"#impl-PartialOrd-for-Infallible\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cs431_homework/test/loom/cmp/trait.PartialOrd.html\" title=\"trait cs431_homework::test::loom::cmp::PartialOrd\">PartialOrd</a> for <a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#980\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, _other: &amp;<a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a>) -&gt; <a class=\"enum\" href=\"cs431_homework/test/loom/option/enum.Option.html\" title=\"enum cs431_homework::test::loom::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"cs431_homework/test/loom/cmp/enum.Ordering.html\" title=\"enum cs431_homework::test::loom::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"cs431_homework/test/loom/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"cs431_homework/test/loom/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"cs431_homework/test/loom/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"cs431_homework/test/loom/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"cs431_homework/test/loom/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","cs431_homework::test::loom::string::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Termination-for-Infallible\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.61.0\">1.61.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/process.rs.html#2560\">Source</a></span><a href=\"#impl-Termination-for-Infallible\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cs431_homework/test/loom/process/trait.Termination.html\" title=\"trait cs431_homework::test::loom::process::Termination\">Termination</a> for <a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.report\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/process.rs.html#2561\">Source</a><a href=\"#method.report\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/process/trait.Termination.html#tymethod.report\" class=\"fn\">report</a>(self) -&gt; <a class=\"struct\" href=\"cs431_homework/test/loom/process/struct.ExitCode.html\" title=\"struct cs431_homework::test::loom::process::ExitCode\">ExitCode</a></h4></section></summary><div class='docblock'>Is called to get the representation of the value as status code.\nThis status code is returned to the operating system.</div></details></div></details>","Termination","cs431_homework::test::loom::string::ParseError"],["<section id=\"impl-Copy-for-Infallible\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#935\">Source</a></span><a href=\"#impl-Copy-for-Infallible\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cs431_homework/test/loom/marker/trait.Copy.html\" title=\"trait cs431_homework::test::loom::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a></h3></section>","Copy","cs431_homework::test::loom::string::ParseError"],["<section id=\"impl-Eq-for-Infallible\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.34.0\">1.34.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/convert/mod.rs.html#976\">Source</a></span><a href=\"#impl-Eq-for-Infallible\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cs431_homework/test/loom/cmp/trait.Eq.html\" title=\"trait cs431_homework::test::loom::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"cs431_homework/test/loom/convert/enum.Infallible.html\" title=\"enum cs431_homework::test::loom::convert::Infallible\">Infallible</a></h3></section>","Eq","cs431_homework::test::loom::string::ParseError"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[35168]}
(function() {
    var type_impls = Object.fromEntries([["cs431_homework",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ElimStack%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cs431_homework/elim_stack/base.rs.html#62\">Source</a><a href=\"#impl-Debug-for-ElimStack%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cs431_homework/test/loom/fmt/trait.Debug.html\" title=\"trait cs431_homework::test::loom::fmt::Debug\">Debug</a>, S: <a class=\"trait\" href=\"cs431_homework/test/loom/fmt/trait.Debug.html\" title=\"trait cs431_homework::test::loom::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"cs431_homework/elim_stack/base/trait.Stack.html\" title=\"trait cs431_homework::elim_stack::base::Stack\">Stack</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"cs431_homework/test/loom/fmt/trait.Debug.html\" title=\"trait cs431_homework::test::loom::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"cs431_homework/elim_stack/base/struct.ElimStack.html\" title=\"struct cs431_homework::elim_stack::base::ElimStack\">ElimStack</a>&lt;T, S&gt;<div class=\"where\">where\n    S::<a class=\"associatedtype\" href=\"cs431_homework/elim_stack/base/trait.Stack.html#associatedtype.PushReq\" title=\"type cs431_homework::elim_stack::base::Stack::PushReq\">PushReq</a>: <a class=\"trait\" href=\"cs431_homework/test/loom/fmt/trait.Debug.html\" title=\"trait cs431_homework::test::loom::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cs431_homework/elim_stack/base.rs.html#62\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"cs431_homework/test/loom/fmt/struct.Formatter.html\" title=\"struct cs431_homework::test::loom::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"cs431_homework/test/loom/fmt/type.Result.html\" title=\"type cs431_homework::test::loom::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"cs431_homework/test/loom/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cs431_homework::elim_stack::ElimStack"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-ElimStack%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cs431_homework/elim_stack/base.rs.html#73-80\">Source</a><a href=\"#impl-Default-for-ElimStack%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S: <a class=\"trait\" href=\"cs431_homework/elim_stack/base/trait.Stack.html\" title=\"trait cs431_homework::elim_stack::base::Stack\">Stack</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"cs431_homework/test/loom/default/trait.Default.html\" title=\"trait cs431_homework::test::loom::default::Default\">Default</a> for <a class=\"struct\" href=\"cs431_homework/elim_stack/base/struct.ElimStack.html\" title=\"struct cs431_homework::elim_stack::base::ElimStack\">ElimStack</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cs431_homework/elim_stack/base.rs.html#74-79\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/test/loom/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"cs431_homework/test/loom/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","cs431_homework::elim_stack::ElimStack"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Stack%3CT%3E-for-ElimStack%3CT,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cs431_homework/elim_stack/elim.rs.html#11-45\">Source</a><a href=\"#impl-Stack%3CT%3E-for-ElimStack%3CT,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S: <a class=\"trait\" href=\"cs431_homework/elim_stack/base/trait.Stack.html\" title=\"trait cs431_homework::elim_stack::base::Stack\">Stack</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"cs431_homework/elim_stack/base/trait.Stack.html\" title=\"trait cs431_homework::elim_stack::base::Stack\">Stack</a>&lt;T&gt; for <a class=\"struct\" href=\"cs431_homework/elim_stack/base/struct.ElimStack.html\" title=\"struct cs431_homework::elim_stack::base::ElimStack\">ElimStack</a>&lt;T, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PushReq\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/cs431_homework/elim_stack/elim.rs.html#12\">Source</a><a href=\"#associatedtype.PushReq\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"cs431_homework/elim_stack/base/trait.Stack.html#associatedtype.PushReq\" class=\"associatedtype\">PushReq</a> = &lt;S as <a class=\"trait\" href=\"cs431_homework/elim_stack/base/trait.Stack.html\" title=\"trait cs431_homework::elim_stack::base::Stack\">Stack</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"cs431_homework/elim_stack/base/trait.Stack.html#associatedtype.PushReq\" title=\"type cs431_homework::elim_stack::base::Stack::PushReq\">PushReq</a></h4></section></summary><div class='docblock'>Push request type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_push\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cs431_homework/elim_stack/elim.rs.html#14-28\">Source</a><a href=\"#method.try_push\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/elim_stack/base/trait.Stack.html#tymethod.try_push\" class=\"fn\">try_push</a>(\n    &amp;self,\n    req: <a class=\"struct\" href=\"crossbeam_epoch/atomic/struct.Owned.html\" title=\"struct crossbeam_epoch::atomic::Owned\">Owned</a>&lt;Self::<a class=\"associatedtype\" href=\"cs431_homework/elim_stack/base/trait.Stack.html#associatedtype.PushReq\" title=\"type cs431_homework::elim_stack::base::Stack::PushReq\">PushReq</a>&gt;,\n    guard: &amp;<a class=\"struct\" href=\"crossbeam_epoch/guard/struct.Guard.html\" title=\"struct crossbeam_epoch::guard::Guard\">Guard</a>,\n) -&gt; <a class=\"enum\" href=\"cs431_homework/test/loom/result/enum.Result.html\" title=\"enum cs431_homework::test::loom::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"crossbeam_epoch/atomic/struct.Owned.html\" title=\"struct crossbeam_epoch::atomic::Owned\">Owned</a>&lt;Self::<a class=\"associatedtype\" href=\"cs431_homework/elim_stack/base/trait.Stack.html#associatedtype.PushReq\" title=\"type cs431_homework::elim_stack::base::Stack::PushReq\">PushReq</a>&gt;&gt;</h4></section></summary><div class='docblock'>Tries to push a value to the stack. <a href=\"cs431_homework/elim_stack/base/trait.Stack.html#tymethod.try_push\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_pop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cs431_homework/elim_stack/elim.rs.html#30-40\">Source</a><a href=\"#method.try_pop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/elim_stack/base/trait.Stack.html#tymethod.try_pop\" class=\"fn\">try_pop</a>(&amp;self, guard: &amp;<a class=\"struct\" href=\"crossbeam_epoch/guard/struct.Guard.html\" title=\"struct crossbeam_epoch::guard::Guard\">Guard</a>) -&gt; <a class=\"enum\" href=\"cs431_homework/test/loom/result/enum.Result.html\" title=\"enum cs431_homework::test::loom::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"cs431_homework/test/loom/option/enum.Option.html\" title=\"enum cs431_homework::test::loom::option::Option\">Option</a>&lt;T&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Tries to pop a value from the stack. <a href=\"cs431_homework/elim_stack/base/trait.Stack.html#tymethod.try_pop\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cs431_homework/elim_stack/elim.rs.html#42-44\">Source</a><a href=\"#method.is_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/elim_stack/base/trait.Stack.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self, guard: &amp;<a class=\"struct\" href=\"crossbeam_epoch/guard/struct.Guard.html\" title=\"struct crossbeam_epoch::guard::Guard\">Guard</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the stack is empty.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cs431_homework/elim_stack/base.rs.html#41-47\">Source</a><a href=\"#method.push\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/elim_stack/base/trait.Stack.html#method.push\" class=\"fn\">push</a>(&amp;self, t: T)</h4></section></summary><div class='docblock'>Pushes a value to the stack.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cs431_homework/elim_stack/base.rs.html#52-59\">Source</a><a href=\"#method.pop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cs431_homework/elim_stack/base/trait.Stack.html#method.pop\" class=\"fn\">pop</a>(&amp;self) -&gt; <a class=\"enum\" href=\"cs431_homework/test/loom/option/enum.Option.html\" title=\"enum cs431_homework::test::loom::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Pops a value from the stack. <a href=\"cs431_homework/elim_stack/base/trait.Stack.html#method.pop\">Read more</a></div></details></div></details>","Stack<T>","cs431_homework::elim_stack::ElimStack"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[10577]}